[core]
  pager = less -FRSX
  whitespace = fix,-indent-with-non-tab,trailing-space,cr-at-eol
  editor = vim -f
  autocrlf = input
  safecrlf = true
[advice]
  statusHints = false
[color]
  branch = auto
  diff = auto
  status = auto
  ui = true
  pager = true
[color "branch"]
  current = yellow reverse
  local   = yellow
  remote  = green
[color "diff"]
  meta = blue
  frag = magenta
  old  = red
  new  = green
[color "status"]
  added = yellow
  changed = green
  untracked = blue
[push]
  default = current
[alias]
  aa = add --all
  add-unmerged = "!f() { git ls-files --unmerged | cut -f2 | sort -u ; }; git add `f`"
  am = am -3
  amend = commit --amend
  br = branch
  ci = commit
  co = checkout
  cp = cherry-pick
  dc = diff --cached
  di = diff
  ds  = diff --staged
  dw  = diff --color-words
  edit-unmerged = "!f() { git ls-files --unmerged | cut -f2 | sort -u ; }; $EDITOR `f`"
  fa = fetch --all
  fapu = "!git fa && git pull"
  fp = format-patch
  l = "!source ~/.githelpers && pretty_git_log"
  la = !git l --all
  ll = log --decorate -p
  log1 = log --abbrev-commit --pretty=oneline
  logf = log --pretty=fuller
  lol = log --graph --decorate --pretty=oneline --abbrev-commit
  lola = log --graph --decorate --pretty=oneline --abbrev-commit --all
  new = log ..@{upstream}
  noff = merge --no-ff
  pend = log @{upstream}..
  pullify = config --add remote.origin.fetch '+refs/pull/*/head:refs/remotes/origin/pr/*'
  pf = push --force-with-lease
  pr  = "!f() { git fetch origin refs/pull/$1/head:pr/$1; } ; f"
  r = !git l -20
  review = !"git log master..origin/master"
  rs = !git l -10
  ra = !git r --all
  st = status
  sh = show
  show-patch = format-patch --stdout -1
  sm  = submodule
  smu = submodule foreach git pull origin master
[branch]
  autosetuprebase = always
[diff]
  tool = vimdiff
[difftool "diffmerge"]
  cmd = diffmerge \"$LOCAL\" \"$REMOTE\"
[merge]
  tool = vimdiff
[mergetool "diffmerge"]
  cmd = "diffmerge --merge --result=\"$MERGED\" \"$LOCAL\" \"$(if test -f \"$BASE\"; then echo \"$BASE\"; else echo \"$LOCAL\"; fi)\" \"$REMOTE\""
  trustExitCode = true
[commit]
	gpgsign = true
